===============
 ZCML
===============

.. admonition:: Description

        What Plone programmers should know about ZCML
   
.. contents :: :local:
        
Introduction
-----------------

ZCML stands for Zope Configuration Mark-up Language. 
It is an XML based language to extend and plug into Zope 3 based systems.

ZCML provides

* Conflict resolution: e.g. two plug-ins cannot overlap

* Extendable syntax based on namespaces

Downsides of ZCML are

* Cumbersome to write by hand

* Lack of documentation

Plone uses ZCML to

* Plug-in components to various places in the system, both core and add-ons

.. note ::

        Everything you can do in ZCML can be done in Python code too.
        
After developers found ZCML cumbersome, :doc:`Grok framework </components/grok>` was
created in order to avoid manual XML writing and using Python directives and function decorators 
instead.         
        
More info

* `ZCML reference <http://apidoc.zope.org/++apidoc++/ZCML/staticmenu.html>`_ (does not include Plone specific directives)

* http://docs.zope.org/zopetoolkit/codingstyle/zcml-style.html 
                
ZCML workflow
-----------------------

Each Plone component (core, add-on) has a base ``configure.zcml`` in the package root.
This ZCML file can include additional nested configuration files using ``<include>`` directive.

* ZCML is always executed during Plone start up

* Your :doc:`unit test </testing_and_debugging/unit_testing>` may need to manually include ZCML

* :doc:`Funny exception error messages occur if Plone is started in the production mode and ZCML was
  not properly read for all the packages </troubleshooting/exceptions>`

When Plone is started all ZCML files are picked  up.

* (new way) Python egg setup.py file contains `autoinclude <http://plone.org/products/plone/roadmap/247>`_ 
  hint and is picked up automatically when all the packages
  are scanned

* (old way) ZCML reference must be manually added to zcml = section in buildout.cfg

If ZCML contains errors :doc:`Plone does not start up on foreground </troubleshooting/basic>`
